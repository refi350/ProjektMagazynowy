@model Magazyn.Models.Contractor

@{
    ViewData["Title"] = "Edit";
    int? WareId = Context.Request.HttpContext.Session.GetInt32("WareId");
    string? Color = Context.Request.HttpContext.Session.GetString("BgColor");

}
<body style="background-color: @Color">

<h1>Edit</h1>

<h4>Contractor</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="Recipient" /> @Html.DisplayNameFor(model => model.Recipient)
                </label>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="Supplier" /> @Html.DisplayNameFor(model => model.Supplier)
                </label>
            </div>
            <div class="form-group">
                <label asp-for="Nip" class="control-label"></label>
                <input asp-for="Nip" class="form-control" />
                <span asp-validation-for="Nip" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index" asp-route-WarehouseId="@WareId">Back to List</a>
</div>
</body>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
